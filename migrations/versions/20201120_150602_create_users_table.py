"""create_users_table

Revision ID: ffdc0a98111c
Revises:
Create Date: 2020-11-20 15:06:02.230689

"""
from alembic import op
import sqlalchemy as sa
from datetime import datetime
import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")


# revision identifiers, used by Alembic.
revision = 'ffdc0a98111c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
                    sa.Column('id', sa.Integer(), 
                        nullable=False
                        ),
                    sa.Column('username', 
                        sa.String(length=40), 
                        nullable=False
                        ),
                    sa.Column('email', sa.String(length=255), 
                        nullable=False
                        ),
                    sa.Column('hashed_password', sa.String(
                        length=255), nullable=False),
                    sa.Column('created', sa.DateTime(),
                              default=datetime.now()),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email'),
                    sa.UniqueConstraint('username')
                    )

    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")

    op.create_table('decks',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('owner', sa.Integer(), nullable=False),
                    sa.Column('title', sa.String(length=30), nullable=False),
                    sa.Column('created', sa.DateTime(),
                              default=datetime.now()),
                    sa.Column('icon', sa.String(length=255) , nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.ForeignKeyConstraint(['owner'], ['users.id'], ),
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE decks SET SCHEMA {SCHEMA};")

    op.create_table('cards',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('creator', sa.Integer(), nullable=True),
                    sa.Column('text', sa.String(length=60), nullable=False),
                    sa.Column('is_question', sa.Boolean(),
                              nullable=False, default=False),
                    sa.Column('created', sa.DateTime(),
                              default=datetime.now()),
                    sa.PrimaryKeyConstraint('id'),
                    sa.ForeignKeyConstraint(['creator'], ['users.id'], ),

                    )
    if environment == "production":
        op.execute(f"ALTER TABLE cards SET SCHEMA {SCHEMA};")

    op.create_table('prints',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user', sa.Integer(), nullable=False),
                    sa.Column('deck', sa.Integer(), nullable=True),
                    sa.Column('card', sa.Integer(), nullable=True),
                    sa.Column('created', sa.DateTime(),
                              default=datetime.now()),
                    sa.PrimaryKeyConstraint('id'),
                    sa.ForeignKeyConstraint(['user'], ['users.id'], ),
                    sa.ForeignKeyConstraint(['deck'], ['decks.id'], ),
                    sa.ForeignKeyConstraint(['card'], ['cards.id'], ),
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE prints SET SCHEMA {SCHEMA};")

    op.create_table('favorites',
                    sa.Column('users', sa.Integer(), nullable=False),
                    sa.Column('cards', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('users', 'cards'),
                    sa.ForeignKeyConstraint(['users'], ['users.id']),
                    sa.ForeignKeyConstraint(['cards'], ['cards.id']),
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE favorites SET SCHEMA {SCHEMA};")

    op.create_table('deck_cards',
                    sa.Column('decks', sa.Integer(), nullable=False),
                    sa.Column('cards', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('decks', 'cards'),
                    sa.ForeignKeyConstraint(['decks'], ['decks.id']),
                    sa.ForeignKeyConstraint(['cards'], ['cards.id']),
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE deck_cards SET SCHEMA {SCHEMA};")

    # ### end Alembic commands ###qqqqqqqqq


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('deck_cards')
    op.drop_table('favorites')
    op.drop_table('prints')
    op.drop_table('cards')
    op.drop_table('decks')
    op.drop_table('users')
    # ### end Alembic commands ###
